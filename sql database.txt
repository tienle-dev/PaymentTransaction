BEGIN TRANSACTION;

-- Table: balance
CREATE TABLE balance (
    AccNo INT NOT NULL,
    Balance DECIMAL(15,0) NULL,
    Interest DECIMAL(15,0) NOT NULL DEFAULT 0,
    CONSTRAINT PK_balance PRIMARY KEY (AccNo)
);

-- Table: credentials
CREATE TABLE credentials (
    AccNo INT NOT NULL IDENTITY(197,1),
    Pass VARCHAR(100) NOT NULL,
    CONSTRAINT PK_credentials PRIMARY KEY (AccNo)
);

-- Table: transactions
CREATE TABLE transactions (
    Sender INT NOT NULL,
    Receiver INT NOT NULL,
    Amount DECIMAL(10,0) NOT NULL,
    Remarks VARCHAR(50) NOT NULL,
    DateTime DATETIME NOT NULL DEFAULT GETDATE(),
    SenBalance DECIMAL(10,0) NOT NULL,
    RecBalance DECIMAL(10,0) NOT NULL
);

-- Table: userinfo
CREATE TABLE userinfo (
    AccNo INT NOT NULL,
    Name VARCHAR(50) NULL,
    Address VARCHAR(100) NULL,
    Email VARCHAR(64) NULL,
    CONSTRAINT PK_userinfo PRIMARY KEY (AccNo)
);


-- Foreign keys
ALTER TABLE balance
    ADD CONSTRAINT FK_balance_credentials FOREIGN KEY (AccNo) REFERENCES credentials (AccNo);

ALTER TABLE userinfo
    ADD CONSTRAINT FK_userinfo_credentials FOREIGN KEY (AccNo) REFERENCES credentials (AccNo);

ALTER TABLE transactions
	ADD CONSTRAINT CHK_SufficientBalance
	CHECK (SenBalance >= Amount);

COMMIT;

CREATE TRIGGER UpdateBalance
ON transactions
AFTER INSERT
AS
BEGIN
    UPDATE balance
    SET Balance = Balance - (SELECT Amount FROM inserted WHERE Sender = balance.AccNo)
    WHERE AccNo IN (SELECT Sender FROM inserted);

    UPDATE balance
    SET Balance = Balance + (SELECT Amount FROM inserted WHERE Receiver = balance.AccNo)
    WHERE AccNo IN (SELECT Receiver FROM inserted);
END;